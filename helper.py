import matplotlib.pyplot as plt
import numpy as np


def draw_loss_plot():
    results = {
        'imputacja': [0.04813991480143586, 0.021758462806932187, 0.017991959044733104, 0.015934111219054484,
                      0.014518505246301255, 0.01349857622437268, 0.012713501948764635, 0.012091845925382518,
                      0.011571332939529501, 0.011134553921119285, 0.010750563735706509, 0.010399811125908058,
                      0.010081236199078854, 0.009796360479562104, 0.009545277077666732, 0.009320273230994184,
                      0.009109330938975627, 0.008913600463842866, 0.008731283911075449, 0.008560139615688085,
                      0.00840212591141484, 0.0082590623859263, 0.008126910514007752, 0.008006722004208926,
                      0.00789794813086118, 0.007798514041940175, 0.007707325830526708, 0.007622969167316232,
                      0.007546006804042199, 0.007474586882584874, 0.0074081897230508335, 0.007346041987771762,
                      0.007287213790853954, 0.007232618466960437, 0.00717993187418672, 0.007130008863145906,
                      0.007083044166288943, 0.007038884109158718, 0.006995701352863255, 0.006954526440786446,
                      0.006915036975851855, 0.006877526835177244, 0.006841636104587816, 0.006807383741117994,
                      0.006775075486696691, 0.006743821771780193, 0.006713809005039261, 0.006683563661011267,
                      0.006655848485081391, 0.006628140875842592, 0.0066020741407343, 0.0065766112104758455,
                      0.0065523196534211115, 0.006527591804527494, 0.006504604904805379, 0.006482343221257246,
                      0.006460980402323607, 0.00644022828604238, 0.006419577330577407, 0.0064001866449120435,
                      0.006381739970244595, 0.006362703987601835, 0.006344676685972306, 0.006326734899102358,
                      0.006309439357698553, 0.006291956157844372, 0.006274996422516258, 0.0062580900510639205,
                      0.006241439948449708, 0.006224543529643672, 0.006207657250182003, 0.00619086858976046,
                      0.006173318669463868, 0.0061547303069512975, 0.006135414173088996, 0.006115043008250745,
                      0.006095053650645265, 0.006075707568272467, 0.006056846206580176, 0.0060389882945616835,
                      0.006021533727931476, 0.006005220528074738, 0.005989081499020192, 0.005973864558031189,
                      0.005959597304853583, 0.005945770422285024, 0.00593188266266611, 0.005919028757002388,
                      0.00590619570089264, 0.00589385533034433, 0.005881781343117049, 0.005870462904673678,
                      0.005858591078597145, 0.0058472016935337285, 0.0058369123395738305, 0.0058262027480474494,
                      0.005816184257281522, 0.005806118499320721, 0.005796448451027616, 0.005787207391332528],
        'pierwsza warstwa': [0.05814177486021262, 0.02012416895734759, 0.014902006010184862, 0.012328562546214688,
                             0.010866711856290625, 0.00989735648545426, 0.009176172276512807, 0.008618411118669204,
                             0.008169193709974229, 0.007794526034336378, 0.007471927099489705, 0.007188955925018623,
                             0.006949055647739806, 0.006737272400497861, 0.006548630786790863, 0.006381515972058844,
                             0.006232077107421462, 0.006096300705798579, 0.005973302316533525, 0.0058599892068315045,
                             0.005754331766432902, 0.005654807345928656, 0.005560483970655768, 0.005471608455254674,
                             0.005387355484665068, 0.005307126648297031, 0.005231252387027829, 0.005157923677208372,
                             0.0050876678855981865, 0.005021058603528326, 0.004957618134595933, 0.00489717483099692,
                             0.00483949107527386, 0.004784580252716166, 0.0047319302354213895, 0.004681219407518503,
                             0.004633096739818316, 0.004587339529369849, 0.004543606057608105, 0.004502493342000461,
                             0.004463074785411457, 0.004425321118380459, 0.00438892911344112, 0.004354584386861095,
                             0.004321548696821417, 0.0042901598418373715, 0.004259563522651284, 0.004229768864774699,
                             0.004201223072060729, 0.0041730176933285346, 0.004146131913667853, 0.004120522055147361,
                             0.004095281434730714, 0.004070708993822336, 0.004046940276979672, 0.004024202199579629,
                             0.004001800343550087, 0.003979932851528498, 0.003958879052646456, 0.00393773069972937,
                             0.003917569971555594, 0.003897939999192218, 0.003878787300756197, 0.003860265656924734,
                             0.003841866574683442, 0.003823983933435737, 0.0038062296277004224, 0.003788697513799647,
                             0.003772061401211291, 0.0037555675997997906, 0.0037391511791141567, 0.003723138651751244,
                             0.0037069036512195866, 0.003691622274095918, 0.0036766283306696123, 0.003661626926602962,
                             0.0036469998825417334, 0.0036326012066610165, 0.003618359602518989, 0.0036046771915003023,
                             0.0035911933821077295, 0.0035778554775926902, 0.003564760328288379, 0.003551434112251009,
                             0.0035387261200003632, 0.0035266109859689544, 0.0035144321954163407, 0.003502378019319719,
                             0.003490255396094543, 0.0034782915197083594, 0.0034671882036376982, 0.0034557102215353043,
                             0.0034446650275669, 0.0034339945272352586, 0.0034230639869135856, 0.0034129516040236475,
                             0.0034027589117682187, 0.003392702679439473, 0.003382648829069148, 0.0033728968619865115],
        'ostatnia warstwa': [0.03678803396125909, 0.01869941063676163, 0.013809036903553727, 0.011688727327287284,
                             0.01039383749284906, 0.009440811827848184, 0.008717256187655602, 0.008127958567448313,
                             0.007641453734374962, 0.007234740059685687, 0.006884224380639912, 0.006582431539154487,
                             0.006322327141745131, 0.006093388596202247, 0.00588957501162393, 0.005708136543691709,
                             0.005544258496738431, 0.005397272601835853, 0.005262957421961412, 0.0051377486893600995,
                             0.005022306278592383, 0.004915414544557819, 0.004815338786102339, 0.004722141511581138,
                             0.004634006152467102, 0.004551010446691794, 0.004473142435214384, 0.00439986933642174,
                             0.004331632103372104, 0.0042679052165058295, 0.004207802342435473, 0.004150387654664927,
                             0.00409125878372909, 0.004022500344549661, 0.00395119772333319, 0.0038846564910149407,
                             0.0038230871708341786, 0.0037662630611751528, 0.0037137010730686495, 0.0036650275390737188,
                             0.0036200577769686455, 0.0035780393810477245, 0.0035386626306335408, 0.0035016984848635084,
                             0.0034667173796340146, 0.0034338214212759205, 0.0034025483873434603, 0.0033729232348835517,
                             0.003344503556544019, 0.0033173115715963816, 0.0032911186573857856, 0.0032659069351336557,
                             0.0032417868205896505, 0.0032184102920967636, 0.0031958561217759734, 0.00317377859598786,
                             0.003152323920691073, 0.0031315614390768193, 0.003111454818522677, 0.003092127001500486,
                             0.003073549951122657, 0.0030555445802836183, 0.0030382174733581263, 0.0030216198698879006,
                             0.003005212101025048, 0.0029895324333835635, 0.0029745959872035767, 0.002960260849023888,
                             0.0029465853498304565, 0.0029332361182096045, 0.0029202994108357234, 0.0029076059712454727,
                             0.0028953877911605712, 0.002883464053808637, 0.0028719248967586644, 0.0028606993823664753,
                             0.0028498906274763763, 0.0028394318358083348, 0.0028292607560218386, 0.00281942334991563,
                             0.002809831615601625, 0.002800309019117728, 0.0027909961132512066, 0.002782102763936778,
                             0.0027733628374503006, 0.002764740339271694, 0.0027563327527869194, 0.0027480029117192446,
                             0.0027394812633515114, 0.002731041193435471, 0.0027230875127969684, 0.0027153241397771775,
                             0.0027076529648470925, 0.002700510278185908, 0.002693417898524506, 0.00268645339697878,
                             0.0026795501852040077, 0.002672886045824152, 0.0026661918444652734, 0.0026596904439165547],
        'u≈õredniony koszt': [0.06207216306946411, 0.022040254336716497, 0.016327920894943025, 0.013904814387283892,
                             0.012091143308345587, 0.011082924233279648, 0.010403413343025712, 0.009863403564547171,
                             0.009408619447215927, 0.00904224551051686, 0.00875010932702219, 0.008508043132688778,
                             0.008299904145465139, 0.008113589953682105, 0.007943061097496066, 0.0077828884274873025,
                             0.007634054088478939, 0.007495360365768817, 0.007369115148232814, 0.007254789083784759,
                             0.007140510281721866, 0.007023284596192943, 0.006929436426231481, 0.006843494702805812,
                             0.006762955171929427, 0.006687669970427366, 0.00661590483740345, 0.006543153917657009,
                             0.006470915669987749, 0.006405603091411589, 0.006343843733294627, 0.006283478315712075,
                             0.006227677055762727, 0.006173524523998242, 0.006121826839178328, 0.006070693731681921,
                             0.006019979347912489, 0.0059692738770111935, 0.005920130887781729, 0.005872516116183733,
                             0.005827074975738883, 0.005783365525027256, 0.00574146196345593, 0.005701212659136766,
                             0.00566149203801527, 0.005622748233167119, 0.005583648021236183, 0.005542781142881565,
                             0.005497159942516345, 0.005449514358421229, 0.00540540930575233, 0.005363065417198064,
                             0.005322883050232489, 0.005284039959745579, 0.005246978485211622, 0.005212388315029683,
                             0.005179151273496473, 0.005146723284781985, 0.005116461867513718, 0.005087139553577142,
                             0.005058700589415424, 0.0050310255820893565, 0.005004456514156087, 0.004978387643739469,
                             0.004952686339544155, 0.004928370813465471, 0.0049053804020448575, 0.004882341977179046,
                             0.0048599016423461, 0.00483709283469525, 0.004809151166033326, 0.004761195987092311,
                             0.004714296062202983, 0.004676583816739304, 0.00464389713156989, 0.004618900436512391,
                             0.004597142714790833, 0.004576601119750473, 0.004556254318332452, 0.004537694979917528,
                             0.0045192983767772645, 0.0045008644061138685, 0.00448312691868366, 0.0044659386833483155,
                             0.0044479000882470775, 0.004430497890627697, 0.004412821818732217, 0.004395260568924957,
                             0.004377696093021176, 0.004360763464816151, 0.004343762130977557, 0.004327251955515637,
                             0.004310692740582062, 0.004294823712157452, 0.004278806609879005, 0.004263558543219746,
                             0.004248696435928444, 0.0042340998400456865, 0.0042197165965620976, 0.004205980483531423]
    }

    plt.figure(figsize=(9, 8))
    for key, data in results.items():
        plt.plot([x for x in range(1, 101)], data, label=key)
        plt.xlabel('epoki')
        plt.ylabel('koszt')
        plt.title('Wykres kosztu treningowego dla imputacji i metod losujƒÖcych, 10 pr√≥bek, 100 epok')
    plt.legend()
    plt.savefig('ac_cnn_loss_100.png')


from PIL import Image


def merge_image_from_autoencoder():
    for i in range(1000):
        images = [Image.open(x) for x in ['original_data_cnn_fixed/' + str(i) + '.png',
                                          'image_with_patch_cnn_fixed/' + str(i) + '.png',
                                          'result_cnn_fixed_imputation_100_1_0.5/' + str(i) + '-imputation.png',
                                          'result_cnn_fixed_first_layer_100_10_0.5/' + str(i) + '-first_layer.png',
                                          'result_cnn_fixed_last_layer_100_10_0.5/' + str(i) + '-last_layer.png',
                                          'result_cnn_fixed_different_cost_100_10_0.5/' + str(
                                              i) + '-different_cost.png']
                  ]
        widths, heights = zip(*(i.size for i in images))

        total_width = sum(widths)
        max_height = max(heights)

        new_im = Image.new('RGB', (total_width, max_height))

        x_offset = 0
        for im in images:
            new_im.paste(im, (x_offset, 0))
            x_offset += im.size[0]

        new_im.save('comparision/comparison-' + str(i) + '.png')

    images = [Image.open(x) for x in ['comparision/comparison-3.png',
                                      'comparision/comparison-7.png',
                                      'comparision/comparison-12.png',
                                      'comparision/comparison-904.png',
                                      'comparision/comparison-16.png',
                                      'comparision/comparison-932.png',
                                      ]
              ]
    widths, heights = zip(*(i.size for i in images))

    max_width = max(widths)
    total_height = sum(heights)

    new_im = Image.new('RGB', (max_width, total_height))

    y_offset = 0
    for im in images:
        new_im.paste(im, (0, y_offset))
        y_offset += im.size[1]

    new_im.save('comparision/comparison_all.png')


def gammas():
    labels = ['pierwsza warstwa', 'ostatnia warstwa', 'u≈õredniony koszt']
    gamma_0 = [0.9255, 0.9257, 0.8798]
    gamma_1 = [0.9254, 0.9281, 0.8898]
    x = np.arange(len(labels))  # the label locations
    width = 0.2  # the width of the bars
    fig, ax = plt.subplots()
    rects1 = ax.bar(x - width, gamma_0, width, label='Gamma 0.0', color='cornflowerblue')
    rects2 = ax.bar(x, gamma_1, width, label='Gamma 1.0', color='darkslateblue')
    # Add some text for labels, title and custom x-axis tick labels, etc.
    box = ax.get_position()
    ax.set_position([box.x0, box.y0, box.width * 0.8, box.height])
    ax.set_ylabel('Precyzja')
    ax.set_title('Por√≥wnanie precyzji dla r√≥≈ºnych parametr√≥w gamma')
    ax.set_xticks(x)
    ax.set_xticklabels(labels)
    ax.legend(bbox_to_anchor=(1.0, 1.0))
    plt.savefig('class_cnn_gammas_grouped.png')


def samples():
    labels = ['pierwsza warstwa', 'ostatnia warstwa', 'u≈õredniony koszt']
    sample_5 = [0.0032, 0.0029, 0.0043]
    sample_10 = [0.0031, 0.0027, 0.0031]
    x = np.arange(len(labels))  # the label locations
    width = 0.2  # the width of the bars
    fig, ax = plt.subplots()
    rects2 = ax.bar(x, sample_5, width, label='5 pr√≥bek', color='darkslateblue')
    rects3 = ax.bar(x + width, sample_10, width, label='10 pr√≥bek', color='gold')
    # Add some text for labels, title and custom x-axis tick labels, etc.
    ax.set_ylabel('≈öredni koszt')
    ax.set_title('≈öredni koszt dla r√≥≈ºnej liczby probek')
    ax.set_xticks(x)
    ax.set_xticklabels(labels)
    ax.legend(bbox_to_anchor=(0.75, 1.0))
    plt.savefig('ac_cnn_samples_grouped.png')


samples()

